!function(){var a,b,c,d,e,f;return c=Backbone.Model.extend({validate:function(){},defaults:function(){},clear:function(){return this.destroy()}}),d=Backbone.Collection.extend({model:c,url:"/officers"}),e=Backbone.View.extend({tagName:"tr",template:_.template('<td><%- id %></td>\n<td><%- name %></td>\n<td><%- title %></td>\n<td><%- User.email %></td>\n<td>\n  <div class="not-user-<%- User.id %>">\n    <% if (role == 3 && !isSuperAdmin) { %>\n      This officer is a super-admin.\n    <% } else { %>\n      <select class="user_role_select">\n        <option value="0" <% if(role == 0){ %>selected <% } %>>Program Officer</option>\n        <option value="1" <% if(role == 1){ %>selected <% } %>>Contracting Officer</option>\n        <option value="2" <% if(role == 2){ %>selected <% } %>>Admin</option>\n        <% if (isSuperAdmin) { %>\n          <option value="3" <% if(role == 3){ %>selected <% } %>>Super Admin</option>\n        <% } %>\n      </select>\n    <% } %>\n  </div>\n  <div class="only-user only-user-<%- User.id %>">\n    You\'re a <%- role_text %>.\n  </div>\n</td>\n<td>\n  <% if (role != 3){ %>\n    <div class="super-admin-only">\n      <div class="not-user-<%- User.id %>">\n        <% if (!User.banned_at){ %>\n          <a class="btn btn-danger ban-button btn-mini">Ban Officer</a>\n        <% } else { %>\n          <a class="btn unban-button btn-mini">Un-Ban Officer</a>\n        <% } %>\n      </div>\n    </div>\n  <% } %>\n</td>'),events:{"change .user_role_select":"update","click .ban-button":"ban","click .unban-button":"unban"},initialize:function(){return this.model.bind("change",this.render,this),this.model.bind("destroy",this.remove,this)},render:function(){return this.$el.html(this.template(_.extend(this.model.toJSON(),{isSuperAdmin:a.options.isSuperAdmin}))),this},ban:function(){return confirm("Are you sure you want to ban this officer? This could have unintended consequences if they were the only officer on a project.")?this.model.save({command:"ban"}):void 0},unban:function(){return this.model.save({command:"unban"})},update:function(){return this.model.save({role:this.$el.find(".user_role_select").val()})},clear:function(){return this.model.clear()}}),b=Backbone.View.extend({initialize:function(){return f.bind("reset",this.reset,this),f.bind("all",this.render,this)},reset:function(){return $("#officers-tbody").html(""),this.addAll()},render:function(){},addOne:function(a){var b,c;return c=new e({model:a}),b=c.render().el,$("#officers-tbody").append(b)},addAll:function(){return f.each(this.addOne)}}),a={},f={},Rfpez.Backbone.AdminOfficers=function(c){var e;return e=$("body").hasClass("super-admin"),f=new d,a=new b({collection:f,isSuperAdmin:e}),f.reset(c),a}}(),function(){var a,b,c,d,e,f;return c=Backbone.Model.extend({validate:function(){},defaults:function(){},clear:function(){return this.destroy()}}),d=Backbone.Collection.extend({model:c,url:"/projects"}),e=Backbone.View.extend({tagName:"tr",template:_.template('<td><%- id %></td>\n<td><%- title %></td>\n<td><%- fork_count %></td>\n<td>\n  <select class="recommended-select">\n    <option value="1" <% if (recommended == 1){ %>selected<% } %>>Yes</option>\n    <option value="0" <% if (recommended == 0){ %>selected<% } %>>No</option>\n  </select>\n</td>\n<td>\n  <select class="public-select">\n    <option value="1" <% if (public == 1){ %>selected<% } %>>Yes</option>\n    <option value="0" <% if (public == 0){ %>selected<% } %>>No</option>\n  </select>\n</td>\n<td><%- project_type.name %></td>\n<td>\n  <% if (delisted == 1){ %>\n    <a class="btn relist-button btn-mini">Relist</a>\n  <% } else { %>\n    <a class="btn btn-danger delist-button btn-mini">Delist</a>\n  <% } %>\n</td>'),events:{"change .recommended-select":"update","change .public-select":"update","click .delist-button":"delist","click .relist-button":"relist"},delist:function(){return confirm("Are you sure you want to delist this project?")?this.model.save({command:"delist"}):void 0},relist:function(){return this.model.save({command:"relist"})},update:function(){return this.model.save({recommended:this.$el.find(".recommended-select").val(),"public":this.$el.find(".public-select").val()})},initialize:function(){return this.model.bind("change",this.render,this),this.model.bind("destroy",this.remove,this)},render:function(){return this.$el.html(this.template(this.model.toJSON())),this},clear:function(){return this.model.clear()}}),b=Backbone.View.extend({initialize:function(){return f.bind("reset",this.reset,this),f.bind("all",this.render,this)},reset:function(){return $("#projects-tbody").html(""),this.addAll()},render:function(){},addOne:function(a){var b,c;return c=new e({model:a}),b=c.render().el,$("#projects-tbody").append(b)},addAll:function(){return f.each(this.addOne)}}),a={},f={},Rfpez.Backbone.AdminProjects=function(c){return f=new d,a=new b({collection:f}),f.reset(c),a}}();